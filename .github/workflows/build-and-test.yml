name: Build and Test

on:
  push:
    branches-ignore:
      - 'gh-pages'
      - 'docs/**'
  pull_request:
    branches:
      - 'main'
      - 'develop'

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout repository with token
        uses: actions/checkout@v3
        with:
          lfs: true
          fetch-depth: 0
          token: ${{ github.token }}  # 明示的にトークンを指定

      # xcprettyがインストールされているか確認し、なければユーザー権限でインストール
      - name: Check and install xcpretty
        run: |
          if ! command -v xcpretty &> /dev/null; then
            echo "xcpretty not found, installing with user permissions..."
            gem install --user-install xcpretty
            export PATH="$HOME/.gem/ruby/$(ruby -e 'puts RUBY_VERSION.match(/\d+\.\d+/)[0]')/bin:$PATH"
          fi
          xcpretty --version

      - name: Pull LFS files
        run: |
          git lfs install
          git lfs pull

      # モデルファイルの健全性を検証
      - name: Verify LFS file integrity
        run: |
          echo "Checking ISNet.mlmodel file size and type:"
          du -h Picklet/Models/ISNet.mlmodel
          file Picklet/Models/ISNet.mlmodel

          # ファイルが小さすぎる場合はエラーを表示
          FILE_SIZE=$(du -k Picklet/Models/ISNet.mlmodel | cut -f1)
          if [ $FILE_SIZE -lt 10000 ]; then
            echo "::error::ISNet.mlmodel is too small ($FILE_SIZE KB), likely not properly fetched from LFS"
            echo "File contents:"
            head -n 20 Picklet/Models/ISNet.mlmodel
            exit 1
          else
            echo "✅ ISNet.mlmodel size looks good: $FILE_SIZE KB"
          fi

      - name: Dump MLModel header
        run: |
          echo "First 16 bytes of ISNet.mlmodel:"
          head -c 16 Picklet/Models/ISNet.mlmodel | xxd

      # Swift Packageのダウンロードを別ステップとして分離し、出力を最小限に
      - name: Resolve Swift Packages
        run: |
          xcodebuild -resolvePackageDependencies -project Picklet.xcodeproj -scheme Picklet | grep -v "^$" | grep -v "Creating working copy" | grep -v "Fetching from" | grep -v "Checking out"

      - name: Clean
        run: |
          xcodebuild clean -project Picklet.xcodeproj -scheme Picklet -quiet

      - name: List available simulators
        run: |
          xcrun simctl list devices available | grep -E 'iPhone|iPad'

      - name: Build
        run: |
          # CIビルド用の xcconfig ファイルを使用
          xcodebuild build -project Picklet.xcodeproj -scheme Picklet -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.3.1' CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO COMPILER_INDEX_STORE_ENABLE=NO -quiet

      # テストが必要な場合のみ実行
      - name: Test
        if: github.event_name == 'pull_request' || contains(github.ref, 'main')
        run: |
          # CIビルド用の xcconfig ファイルを使用
          xcodebuild test -project Picklet.xcodeproj -scheme Picklet -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.3.1' -skip-testing:PickletUITests COMPILER_INDEX_STORE_ENABLE=NO -quiet
