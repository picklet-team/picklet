name: Swift Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    - name: Build and Test
      run: |
        xcodebuild test -project Picklet.xcodeproj -scheme Picklet -destination 'platform=iOS Simulator,name=iPhone 15' | xcpretty

  # Linux テストを無効化しました
  # test-linux ジョブをコメントアウトすることで、このジョブは実行されなくなります
  # test-linux:
  #   runs-on: ubuntu-22.04
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Install GPG dependencies
  #     run: |
  #       sudo apt-get update
  #       sudo apt-get install -y gnupg2
  #   - name: Set up Swift
  #     uses: swift-actions/setup-swift@v1
  #     with:
  #       swift-version: "5.9"
  #   - name: Create Package.swift for Linux
  #     run: |
  #       echo '// swift-tools-version:5.9' > Package.swift
  #       echo 'import PackageDescription' >> Package.swift
  #       echo '' >> Package.swift
  #       echo 'let package = Package(' >> Package.swift
  #       echo '    name: "Picklet",' >> Package.swift
  #       echo '    platforms: [.iOS(.v16)],' >> Package.swift
  #       echo '    products: [' >> Package.swift
  #       echo '        .library(name: "PickletCore", targets: ["PickletCore"]),' >> Package.swift
  #       echo '    ],' >> Package.swift
  #       echo '    dependencies: [],' >> Package.swift
  #       echo '    targets: [' >> Package.swift
  #       echo '        .target(' >> Package.swift
  #       echo '            name: "PickletCore",' >> Package.swift
  #       echo '            dependencies: [],' >> Package.swift
  #       echo '            path: "Picklet/Models",' >> Package.swift
  #       echo '            exclude: [' >> Package.swift
  #       echo '                "LocationManager.swift",' >> Package.swift  # CoreLocation依存
  #       echo '                "ISNet.mlmodel"' >> Package.swift  # CoreML依存
  #       echo '            ],' >> Package.swift
  #       echo '            sources: ["Clothing.swift", "Weather.swift"]' >> Package.swift  # 明示的に必要なファイルのみを指定
  #       echo '        ),' >> Package.swift
  #       echo '        .testTarget(' >> Package.swift
  #       echo '            name: "PickletCoreTests",' >> Package.swift
  #       echo '            dependencies: ["PickletCore"],' >> Package.swift
  #       echo '            path: "PickletTests",' >> Package.swift
  #       echo '            sources: ["LinuxTests.swift"]' >> Package.swift  # Linux互換テストファイルを指定
  #       echo '        )' >> Package.swift
  #       echo '    ]' >> Package.swift
  #       echo ')' >> Package.swift
  #       
  #       # パッケージ構成を確認
  #       cat Package.swift
  #   - name: Run Linux-compatible tests
  #     run: |
  #       # XCTestを使用したLinux互換テストを実行
  #       swift test -v || swift test --filter LinuxCompatibleTests
